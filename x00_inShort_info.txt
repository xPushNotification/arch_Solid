SOLID:
    S - Single Responsibility
        один модуль решает одну логическую задачу
        с ресурсами инкапсулированными в этот модуль
    O - Open Closed
        новый функционал добавляется не за счет
        переписывания старого, а за счет расширения
    L - Liskov Substitution
        объект суб класса при подставноке
        туда где используется объект супер класса
        будет работать адекватно с ожидаемой логикою
        характерною для супер класса
    I - Interface Segregation
        много интерфейсов со спецификою
        лучше одного интерфейса общего назначения
        а класс порожденный от интерфейса не должен содержать
        в себе методов интерфейса - которые он не использует
        взял интерфейс = используешь все его методы
    D - Dependency Inversion
        зависимости строятся на абстракциях
        а не на конкретике - тем более конкретики внутренних реализаций
        внутренних объектов классов